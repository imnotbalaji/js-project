{"version":3,"file":"main.js","mappings":"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","sources":["webpack://javascript-project/./src/scripts/chart.js","webpack://javascript-project/./src/scripts/security.js","webpack://javascript-project/./src/scripts/view.js","webpack://javascript-project/./src/index.js"],"sourcesContent":["class Chart {\n\n    constructor(stock,time_period, svg) {\n        this.time_period = time_period;\n        this.data = stock.data;\n    \n        stock.get_data().then((data_array)=> {\n        \n            this.render_line(data_array,this.get_period(time_period),svg);\n        });\n     \n    \n    }\n    get_period(string){\n        \n        const time_period = [\"All\",\"10Y\",\"5Y\",\"2Y\",\"1Y\",\"6M\",\"3M\",\"1M\"];\n        switch(string) {\n            case \"All\":\n                return 365*50;\n                break;\n            case \"10Y\":\n                return 365 * 10;\n                break;\n            case \"5Y\":\n                return 365 * 5;\n                break;\n            case \"2Y\":\n                return 365 * 2;\n                break;\n            case \"1Y\":\n                return 365 * 1;\n                break; \n            case \"6M\":\n                return 30*6;\n                break; \n            case \"3M\":\n                return 30*3;\n                break; \n            case \"1M\":\n                return 30*1;\n                break;\n        }\n\n    }\n \n    render_line(received_data,time_period, svg){\n        // debugger\n        \n      \n        const formatTime = d3.timeFormat(\"%b-%y\");\n        \n        \n\n        \n\n        const margin = {top: 0, bottom:0};\n        \n        \n        \n        const today = new Date();\n        const cutoffdate = new Date();\n        const daysAgo = time_period;\n        cutoffdate.setDate(today.getDate()-daysAgo);\n\n        // Filter data and sort data;\n        const data = received_data.filter(d=> new Date(d.timestamp) > cutoffdate);\n        data.sort((a,b) => new Date(a.timestamp) - new Date(b.timestamp));\n\n\n\n        const start_value = data[0].value;\n\n        const end_value = data[data.length-1].value;\n\n        \n\n        let chart_color;\n        if (end_value > start_value) {\n            chart_color = \"green\";\n        } else {\n            // debugger\n            chart_color = \"red\";\n\n        }\n\n\n\n        const xScale = d3.scaleTime()\n                          .domain(d3.extent(data, d=> new Date(d.timestamp)))\n                          .range([0,800]);\n        \n        const yScale = d3.scaleLinear()\n                         .domain([d3.min(data,d=>d.value),d3.max(data, d=> d.value)])\n                         .range([400,0+margin.top]);\n\n        const line = d3.line()\n                       .x(d=>xScale(new Date(d.timestamp)))\n                       .y(d=>yScale(d.value))\n                    \n\n        // Testing out some filter/ drop shadow effects \n\n        const existingFilter = svg.select(\"#shadow\");\n        if (existingFilter.empty()) {\n        // Create the filter definition and append it to the SVG\n            const filter = svg.append(\"defs\")\n                              .append(\"filter\")\n                              .attr(\"id\", \"shadow\")\n                              .attr(\"x\",\"0%\")\n                              .attr(\"y\",\"-50%\")\n                              .attr(\"height\",\"200%\")\n                              .attr(\"width\",\"200%\")\n\n            \n            filter.append(\"feGaussianBlur\")\n                  .attr(\"in\", \"SourceAlpha\")\n                  .attr(\"stdDeviation\", 3)\n                  .attr(\"result\", \"blur\");\n            \n\n            filter.append(\"feOffset\")\n                  .attr(\"in\", \"blur\")\n                  .attr(\"dx\", 3)\n                  .attr(\"dy\", 3)\n                  .attr(\"result\", \"offsetBlur\");\n\n        let feMerge = filter.append(\"feMerge\");\n\n        feMerge.append(\"feMergeNode\")\n               .attr(\"in\",\"offsetBlur\");\n        \n        feMerge.append(\"feMergeNode\")\n               .attr(\"in\",\"SourceGraphic\")\n\n\n    // filter.append(\"feBlend\")\n    //         .attr(\"in\", \"offsetBlur\")\n    //       .attr(\"in2\", \"blurOut\")\n    //         .attr(\"mode\", \"normal\");\n          \n        }\n\n        let existing_gradient = svg.select(\"#gradient\");\n\n        if (existing_gradient.empty()){\n\n            let gradient = svg.select(\"defs\").append('linearGradient')\n                                            .attr('id','gradient')\n                                            .attr('x1','0%')\n                                            .attr('y1','0%')\n                                            .attr('x2','0%')\n                                            .attr('y2','100%');\n            gradient.append('stop')\n                    .attr('offset','0%')\n                    .attr('stop-color',chart_color)\n                    .attr('stop-opacity',0.3);\n            gradient.append('stop')\n                    .attr('offset','100%')\n                    .attr('stop-color',chart_color)\n                    .attr('stop-opacity',0);\n\n        }\n\n        \n        \n\n        svg.select(\"#gradient\").selectAll(\"stop\").attr('stop-color',chart_color);\n        let min_value = d3.min(data,d=>d.value);\n        \n        let area = d3.area()\n                     .x(d=>xScale(new Date(d.timestamp)))\n                     .y1(d=>yScale(d.value))\n                     .y0(yScale(min_value));\n    \n \n        // Line creation and transitions \n\n        \n\n        let line_path = svg.select(\".line-path\");\n                        \n\n        let area_path = svg.select(\".area-path\");\n\n\n        if (area_path.empty()){\n\n             area_path = svg.append('path')\n                               .attr('class',\"area-path\")\n                              .style(\"fill\", \"url(#gradient\");\n\n\n        }\n\n        area_path.datum(data)\n                 .attr('d', area);\n\n        if (line_path.empty()){\n           \n            line_path = svg.append(\"path\")\n                           .attr(\"class\",\"line-path\")\n                           .attr(\"fill\",\"none\")\n                           .attr(\"stroke\",chart_color)\n                           .attr(\"stroke-width\", 0.7)\n                    //   .attr(\"filter\", \"url(#shadow\");\n        } \n\n        svg.select(\".line-path\").attr(\"stroke\",chart_color);\n\n                  line_path.datum(data)\n                      .attr(\"d\",line);\n\n\n\n         line_path\n               .attr(\"opacity\",0)\n               .transition()\n               .duration(500)\n               .ease(d3.easeLinear)\n               .attr(\"opacity\",1);\n\n\n        \n\n\n        /// Axes \n        \n        const xAxis = d3.axisBottom(xScale)\n                        .tickFormat(d=>formatTime(d))\n\n        let max_value = d3.max(data,d=>d.value);\n        \n        let tick_interval = ( max_value-min_value )/4;\n\n        let tick_values_axis = [min_value, min_value+tick_interval, min_value+2*tick_interval,min_value+3*tick_interval,max_value];\n        let tick_values_grid = [ min_value+tick_interval, min_value+2*tick_interval,min_value+3*tick_interval,max_value];\n\n        \n        const yAxis = d3.axisRight(yScale)\n                        .tickValues(tick_values_axis);\n\n     \n\n        let xAxisgroup = svg.select(\".x-axis\");\n\n        if (xAxisgroup.empty()){\n            xAxisgroup = svg.append(\"g\")\n                            .attr(\"class\",\"x-axis\")\n                            .attr(\"transform\", \"translate(0,\"+400+\")\")\n        }\n\n        xAxisgroup.transition()\n                  .duration(1000)\n                  .call(xAxis);\n\n\n\n        let yAxisgroup = svg.select(\".y-axis\");\n        if (yAxisgroup.empty()) {\n            yAxisgroup = svg.append(\"g\")\n                            .attr(\"class\",\"y-axis\")\n                            .attr(\"transform\",\"translate(\"+800+\",0)\");\n        }\n\n        yAxisgroup.transition()\n                  .duration(1000)\n                  .call(yAxis);\n\n        \n        const yAxisGrid = d3.axisRight(yScale)\n                            // .attr(\"transform\",\"translate(\"+600+\",0)\")\n                            .tickSize(+800)\n                            .tickValues(tick_values_grid)\n                            .tickFormat('');\n        \n        svg.append('g')\n            .attr('class','y grid')\n            .call(yAxisGrid);\n\n            svg.selectAll(\"text\")\n                .style(\"font-family\",\"Arial\")\n                .style(\"font-zie\",\"14px\");\n                        \n\n    \n\n        const hoverCircle = svg.append('circle')\n                               .attr(\"r\",5)\n                               .attr('fill',\"red\")\n                               .style(\"display\",\"none\");\n\n        const hoverText = svg.append('text')\n                             .attr('dy','-1em')\n                             .style('text-anchor','middle')\n                             .style('display','none');\n\n        const hoverLine = svg.append(\"line\")\n                              .attr(\"stroke\", \"grey\")\n                              .attr(\"stroke-width\",\"1\")\n                              .attr(\"stroke-dasharray\",\"5,5\")\n                              .style(\"display\",\"none\");\n\n        svg.on('mouseover',onMouseOver)\n            .on('mousemove', onMouseMove)\n            .on('mouseout',onMouseOut);\n\n        function onMouseOver(){\n            hoverCircle.style('display',null);\n            hoverText.style('display',null);\n            hoverLine.style('display',null);\n\n        }\n\n        function onMouseMove(event) {\n            const [mx, my] = d3.pointer(event);  // Get mouse coordinates\n         \n            const date = xScale.invert(mx);      // Invert the x-scale to get the date\n        \n            const bisectDate = d3.bisector(d=> new Date(d.timestamp)).left;\n\n            const index = bisectDate(data,date);\n            const closestDataPoint = data[index];\n\n            // console.log(closestDataPoint);\n            \n            hoverCircle.attr('cx', xScale(new Date(closestDataPoint.timestamp)))\n                       .attr('cy',yScale(closestDataPoint.value));\n            hoverLine.attr('x1',xScale(new Date(closestDataPoint.timestamp)))\n                     .attr('x2',xScale(new Date(closestDataPoint.timestamp)))\n                     .attr('y1',yScale(min_value))\n                     .attr('y2',yScale(closestDataPoint.value))\n                    \n            hoverText.attr('x',xScale(new Date(closestDataPoint.timestamp))) \n                     .attr('y',yScale(closestDataPoint.value) -10)\n                     .text(closestDataPoint.value)\n                     .style(\"font-family\",\"Roboto, Sans Serif\")\n                     .style(\"font-size\",\"12px\")\n                     .style(\"font-weight\",\"bold\");\n            \n        }\n\n        function onMouseOut(){\n            hoverCircle.style('display','none');\n            hoverText.style('display','none');\n            hoverLine.style('display','none');\n        }\n    }\n\n}\n\nexport default Chart;","class Security {\n    constructor(ticker){\n\n        this.ticker = ticker;\n        this.data =  [30,80,45, 60, 121, 90, 15];   \n    }\n    async get_data(){\n        \n        // debugger;\n\n        // We need this for the url fetching \n        let url = this.url_maker();\n        \n        const res = await fetch(url);\n        const raw_data = await res.json();\n        \n        // const raw_data =  await d3.json('./test_data/IBM_daily_full.json');\n        \n        // console.log(raw_data);\n        const time_series = raw_data[\"Time Series (Daily)\"];\n        let data_array = Object.keys(time_series).map(key => ({timestamp: key, value: parseFloat(time_series[key][\"1. open\"])}));\n\n        return data_array;\n    \n    }\n\n\n\n    url_maker(){\n        let url = \"https://www.alphavantage.co/query?\"\n        let func = \"TIME_SERIES_DAILY\";\n        let symbol = this.ticker.symbol;\n        // console.log(symbol);\n        // let interval = \"60min\"\n        let output_size = \"full\"\n        let apikey = \"XIW7BTPB24E0PU15\";\n\n        // return url+\"function=\"+func+\"&symbol=\"+symbol+\"&interval=\"+interval+\"&apikey=\"+apikey;\n        return url+\"function=\"+func+\"&symbol=\"+symbol+\"&outputsize=\"+output_size+\"&apikey=\"+apikey;\n    }\n    \n\n    generateRandomData(){\n        const data = []\n        const startTime = new Date();\n        startTime.setHours(9,0,0,0);\n        const endTime = new Date();\n        endTime.setHours(17,0,0,0);\n\n        for (let time = startTime; time <= endTime; time.setMinutes(time.getMinutes()+30)){\n            const randomPrice = Math.random()*(200-100) + 100;\n            data.push({\n                timestamp: time.toISOString(),\n                value: randomPrice.toFixed(2)\n            }\n            )\n        }\n        return data;\n    }\n}\nexport default Security;","import Chart from \"./chart\";\nimport Security from \"./security\";\n\nclass View {\n    constructor(){\n        const main = d3.select(\"#main\"); \n        this.render(main);\n    }\n\n    // This function will render our main screen and handle the logic to take input and direct the logic elsewhere\n    \n    render(main){\n   \n    main.style(\"height\",\"90vh\")\n        .style(\"width\",\"70%\")\n        .style(\"border\", \"none\")\n        .style(\"border-radius\", \"1%\")\n        .style(\"background-color\", \"white\")\n        .style(\"box-shadow\" ,\"5px 5px 10px rgba(0, 0, 0, 0.5)\");\n    \n\n    \n    const search_container = main.append(\"div\")\n                                 .attr(\"id\",\"search_container\")\n                                 .attr(\"position\",\"relative\")\n                                 .style(\"padding\",\"20px\")\n                                 .style(\"width\",\"90%\")\n                                 .style(\"height\",\"10%\");\n\n \n\n    const ticker_input = search_container.append(\"input\")\n                                         .attr(\"id\",\"search-input\")\n                                         .attr(\"placeholder\",\"Input your ticker to get started...\")\n                                         .style(\"width\",\"50%\")\n                                         .style(\"border\", \"1px solid grey\")\n                                         .style(\"border-radius\",\"15px\")\n                                        //  .style(\"box-sizing\",\"border-box\")\n                                         .style(\"margin\", \"20px 20px\")\n                                         .style(\"font-size\",\"20px\")\n                                         .style(\"padding\", \"10px 10px\")\n                                         .style(\"box-shadow\" ,\"5px 5px 10px rgba(0, 0, 0, 0.5)\")\n                                         .style(\"text-transform\",\"uppercase\");\n    \n    const chart = main.append(\"div\")\n                       .attr(\"id\",\"chart\")\n                       .style(\"height\",\"80%\")\n                       .style(\"margin-top\",\"25px\")\n                       .attr(\"position\",\"absolute\")\n\n\n    \n    const home_page = chart.append(\"img\")\n                            .attr(\"id\",\"home_page\")\n                            .attr(\"src\",\"./images/Home_page.png\")\n                            .style(\"height\",\"90%\")\n                            .style(\"width\",\"90%\")\n                            // .style(\"position\",\"relative\")\n                            .style(\"margin-top\",\"0px\");\n\n    \n                    \n    \n                       \n                       \n\n    const svg = chart.append(\"svg\")\n                    .attr(\"viewBox\",\"0 0 800 400\")\n                    .attr(\"preserveAspectRatio\",\"none\")\n                    // .attr(\"style\",\"outline: thin solid black\")\n                    // .style(\"border\", \"1px solid black\") // temporary - let's remove it after some time \n                    // .style(\"fill\",\"none\")\n                    \n                    .style(\"width\",\"0%\")\n                    .style(\"height\",\"0%\")\n                    .style(\"overflow\",\"visible\");\n\n\n     const footer = main.append(\"div\")\n                        .attr(\"id\",\"footer\")\n                        .style(\"width\", \"100%\")\n                        .style(\"background-color\",\"beige\")\n                        .style(\"height\",\"10%\")\n                        .style(\"border-top\",\"2px solid grey\")\n    \n    const links = d3.select(\"#footer\")\n                    .append(\"div\")\n                    .attr(\"id\",\"links\")\n                    .style(\"margin-left\",\"20px\");\n                    \n\n    links.append(\"a\")\n         .attr(\"id\",\"github\")\n         .attr(\"href\",\"https://github.com/imnotbalaji\")\n         .attr(\"target\",\"_blank\")\n         .append(\"img\")\n         .attr(\"src\",\"./images/github.png\")\n         .style(\"width\",\"25px\");\n\n    links.append(\"a\")\n         .attr(\"id\",\"github\")\n         .attr(\"href\",\"https://www.linkedin.com/in/balajiv1/\")\n         .attr(\"target\",\"_blank\")\n         .append(\"img\")\n         .attr(\"src\",\"./images/linked_in.png\")\n         .style(\"width\",\"25px\")\n\n\n\n    const openModal = d3.select(\"#footer\")\n                        .append(\"button\")\n                        .attr(\"id\",\"Instructions\")\n                        .text(\"User Guide\")\n                        .style(\"margin-right\",\"20px\")\n\n    \n    \n    let user_guide = d3.select(\"#user-guide\")\n    openModal.on(\"click\", function(){\n        user_guide.style(\"display\",\"block\")\n    })\n\n    let close = d3.select(\".close\");\n\n    close.on(\"click\", function(){\n        user_guide.style(\"display\",\"none\");\n    })\n\n    d3.select(window).on(\"click\", function(event){\n        \n        if (event.target == user_guide.node()){\n            \n            user_guide.style(\"display\",\"none\");\n\n        }\n    })\n\n\n\n\n            \n                  \n    \n    \n    \n    const bound_search_ticker = this.test_search_ticker.bind(this);\n    const debounced_search_ticker = this.debounce(bound_search_ticker,250);\n    \n    ticker_input.on(\"input\", debounced_search_ticker);\n   \n    \n\n    }\n    // ------------- Helper function to debounce;\n    debounce(callback, delay) {\n        let timeout;\n        return (arg) => {\n            clearTimeout(timeout);\n            timeout = setTimeout(()=> callback(arg), delay);\n        }\n    }\n\n    // --- look for the keyword\n    async test_search_ticker(event){\n        const keywords = event.target.value;\n        if (keywords !== \"\") {\n            // Construct the URL\n            const base_url = \"https://www.alphavantage.co/query?\"\n            const func = \"SYMBOL_SEARCH\";\n            const keyword = d3.select(event.target).property(\"value\");\n            const data_type = \"json\"\n            const apikey = \"XIW7BTPB24E0PU15\";\n            const fetch_url = base_url + \"function=\" + func + \"&keywords=\" + keyword + \"&datatype=\" + data_type + \"&apikey=\" +apikey;\n            // Make a fetch request and parse the json output \n            const res = await fetch(fetch_url);\n            const tickers = await res.json();\n            // Call the dropdown with the inner data from the received json data\n            this.render_search_dropdown(tickers[\"bestMatches\"]);\n        } else {\n            // Hide the dropdown if the input box is empty\n            const dropdown = d3.select(\"#dropdown\");\n            dropdown.attr(\"class\",\"dropdown-hidden\");\n        }\n\n    }\n\n    render_search_dropdown(dropdown_items_array) {\n\n        d3.select(\"#dropdown\").remove();\n\n        const dropdown_items = dropdown_items_array.map((d)=> ({symbol: d[\"1. symbol\"], name: d[\"2. name\"]}));\n        \n\n        const drop_down = d3.select(\"#search_container\")\n                            .append(\"div\")\n                            .attr(\"id\", \"dropdown\")\n                            .style(\"position\",\"absolute\")\n                            .style(\"width\",\"45%\")\n                            .style(\"background-color\",\"white\")\n                            .attr(\"overflow-y\",\"auto\")\n                            .style(\"margin-left\",\"5px\")\n                            .style(\"margin-top\",\"65px\")\n                            .style(\"padding\",\"10px 10px\")\n                            // .style(\"box-sizing\",\"border-box\")\n                            .style(\"border\",\"1px solid black\")\n                            .style(\"border-radius\", \"15px\");\n\n        const dropdownitems = drop_down.selectAll(\"div\")\n                                       .data(dropdown_items)\n                                        .enter()\n                                        .append(\"div\")\n                                        .attr('id','dropdown-item')\n                                        .attr(\"width\", \"30%\")\n                                        .text(d=>`${d.symbol}      ${d.name}`);\n\n        dropdownitems.on(\"click\",(event,d)=>{\n            d3.select(\"#search-input\").property(\"value\",d.symbol);\n            \n            this.render_chart_ticker(d);\n            \n\n        })\n        \n\n    }\n    render_chart_ticker(ticker){\n        d3.select(\"#dropdown\").remove();\n        d3.select(\"#home_page\").remove();\n        let svg = d3.select(\"svg\");\n        svg.style(\"width\",\"80%\")\n            .style(\"height\",\"75%\")\n        // debugger\n        const stock = new Security(ticker);\n        this.render_chart(stock,\"All\",svg);\n        this.show_zoom_buttons(stock);\n    }\n\n   \n    \n\n    render_chart(stock,selected_time_period,svg){\n        new Chart(stock,selected_time_period, svg);\n\n    }\n    show_zoom_buttons(stock){\n        // debugger\n        let chart = d3.select(\"#chart\");\n        let svg = d3.select(\"svg\");\n\n        \n        const time_period = [\"All\",\"10Y\",\"5Y\",\"2Y\",\"1Y\",\"6M\",\"3M\",\"1M\"];\n        let selected_time_period = time_period[0];\n\n\n        let zoom = d3.select(\"#zoom\");\n\n\n        if (zoom.empty()) {\n            // debugger\n\n            zoom = chart.append(\"div\")\n                       .attr(\"id\",\"zoom\");\n\n                const zoom_out = zoom.append(\"img\")\n                            .attr(\"id\",\"zoom-out\")\n                            .attr(\"src\",\"./images/zoom_out.png\")\n                            .attr(\"width\",\"25px\")\n                            .attr(\"height\",\"25px\");\n                \n                const zoom_text = zoom.append(\"span\").attr(\"id\",\"zoom_text\");\n\n                const zoom_in = zoom.append(\"img\")\n                          .attr(\"id\",\"zoom-in\")\n                          .attr(\"src\",\"./images/zoom_in.png\")\n                          .attr(\"width\",\"25px\")\n                          .attr(\"height\",\"25px\");\n        }\n\n            \n        let zoom_out = d3.select(\"#zoom-out\");\n        \n        d3.select(\"#zoom_text\").text(selected_time_period);\n        \n        zoom_out.on(\"click\", () => {\n                            selected_time_period = time_period[time_period.indexOf(selected_time_period)-1];\n                            // d3.select(\"#zoom_text\").remove();\n                            d3.select(\"#zoom_text\").text(selected_time_period);\n                            this.render_chart(stock,selected_time_period,svg);\n                            });\n        \n        \n        \n        \n\n        \n        let zoom_in = d3.select(\"#zoom-in\");\n\n\n            \n            \n        zoom_in.on(\"click\", () => {\n                        selected_time_period = time_period[time_period.indexOf(selected_time_period)+1];\n                        // d3.select(\"#zoom_text\").remove();\n                        d3.select(\"#zoom_text\").text(selected_time_period);\n                        this.render_chart(stock,selected_time_period,svg);\n                        });\n\n   \n        \n    }\n\n  \n\n\n}\n\nexport default View;\n\n\n\n","import Chart from \"./scripts/chart\";\nimport View from \"./scripts/view\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n    \n    \n\n    d3.select(\"body\")\n    .style(\"background-image\",\"url('./images/island.png')\");\n\n\n    new View();\n\n\n})"],"names":["constructor","stock","time_period","svg","this","data","get_data","then","data_array","render_line","get_period","string","received_data","formatTime","d3","timeFormat","today","Date","cutoffdate","daysAgo","setDate","getDate","filter","d","timestamp","sort","a","b","start_value","value","chart_color","length","xScale","scaleTime","domain","extent","range","yScale","scaleLinear","min","max","line","x","y","select","empty","append","attr","feMerge","gradient","selectAll","min_value","area","y1","y0","line_path","area_path","style","datum","transition","duration","ease","easeLinear","xAxis","axisBottom","tickFormat","max_value","tick_interval","tick_values_axis","tick_values_grid","yAxis","axisRight","tickValues","xAxisgroup","call","yAxisgroup","yAxisGrid","tickSize","hoverCircle","hoverText","hoverLine","on","event","mx","my","pointer","date","invert","index","bisectDate","bisector","left","closestDataPoint","text","ticker","url","url_maker","res","fetch","time_series","json","Object","keys","map","key","parseFloat","symbol","generateRandomData","startTime","setHours","endTime","time","setMinutes","getMinutes","randomPrice","Math","random","push","toISOString","toFixed","main","render","ticker_input","chart","links","openModal","user_guide","window","target","node","bound_search_ticker","test_search_ticker","bind","debounced_search_ticker","debounce","callback","delay","timeout","arg","clearTimeout","setTimeout","fetch_url","base_url","property","tickers","render_search_dropdown","dropdown_items_array","remove","dropdown_items","name","enter","render_chart_ticker","Security","render_chart","show_zoom_buttons","selected_time_period","Chart","zoom","zoom_out","indexOf","document","addEventListener","View"],"sourceRoot":""}